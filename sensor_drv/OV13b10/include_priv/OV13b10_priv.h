/******************************************************************************\
|* Copyright (c) 2020 by VeriSilicon Holdings Co., Ltd. ("VeriSilicon")       *|
|* All Rights Reserved.                                                       *|
|*                                                                            *|
|* The material in this file is confidential and contains trade secrets of    *|
|* of VeriSilicon.  This is proprietary information owned or licensed by      *|
|* VeriSilicon.  No part of this work may be disclosed, reproduced, copied,   *|
|* transmitted, or used in any way for any purpose, without the express       *|
|* written permission of VeriSilicon.                                         *|
|*                                                                            *|
\******************************************************************************/
/**
 * @file OV13b10_priv.h
 *
 * @brief Interface description for image sensor specific implementation (iss).
 *
 *****************************************************************************/
/**
 * @page module_name_page Module Name
 * Describe here what this module does.
 *
 * For a detailed list of functions and implementation detail refer to:
 * - @ref module_name
 *
 * @defgroup ov13b10_priv
 * @{
 *
 */
#ifndef __OV13b10_PRIV_H__
#define __OV13b10_PRIV_H__

#include <ebase/types.h>
#include <common/return_codes.h>
#include <hal/hal_api.h>
#include <isi/isi_common.h>
#include <isi/isi_vvsensor.h>



#ifdef __cplusplus
extern "C"
{
#endif

typedef struct OV13b10_Context_s
{
    IsiSensorContext_t        isiCtx;                 /**< common context of ISI and ISI driver layer; @note: MUST BE FIRST IN DRIVER CONTEXT */
    IsiSensorMode_t           sensorMode;
    HalI2cHandle_t            halMotorI2cHandle;

    uint32_t                  maxFps;
    uint32_t                  minFps;
    uint32_t                  currFps;
    bool_t                    configured;             /**< flags that config was applied to sensor */
    bool_t                    streaming;              /**< flags that csensor is streaming data */
    bool_t                    testPattern;            /**< flags that sensor is streaming test-pattern */
    bool_t                    isAfpsRun;              /**< if true, just do anything required for Afps parameter calculation, but DON'T access SensorHW! */

    float                     oneLineExpTime;
    uint16_t                  maxIntegrationLine;
    uint16_t                  minIntegrationLine;
    uint16_t                  frameLengthLines;       /**< frame line length */
    uint16_t                  curFrameLengthLines;

    float                     aecMinGain;
    float                     aecMaxGain;
    float                     aecMinIntegrationTime;
    float                     aecMaxIntegrationTime;

    float                     aecIntegrationTimeIncrement; /**< _smallest_ increment the sensor/driver can handle (e.g. used for sliders in the application) */
    float                     aecGainIncrement;            /**< _smallest_ increment the sensor/driver can handle (e.g. used for sliders in the application) */
    float                     aecCurGain;
    float                     aecCurIntegrationTime;
    float                     curAgain;
    float                     curDgain;

    bool                      groupHold;
    uint32_t                  oldGain;
    uint32_t                  oldIntegrationTime;

    uint8_t                   i2cBusID;

    IsiGainInfo_t             aGain;
    IsiGainInfo_t             aVSGain;
    IsiGainInfo_t             dGain;
    IsiGainInfo_t             dVSGain;

    IsiOTPLSC_t               *pLscData;
    IsiOTPAWB_t               *pAwbData;
    IsiOTPAWB_t               *pGoldenAwbData;
    IsiOTPLightSource_t       *pLightSourceData;
} OV13b10_Context_t;

static RESULT OV13b10_IsiCreateIss(IsiSensorInstanceConfig_t *pConfig, IsiSensorHandle_t *pHandle);
static RESULT OV13b10_IsiOpenIss(IsiSensorHandle_t handle, uint32_t mode);
static RESULT OV13b10_IsiCloseIss(IsiSensorHandle_t handle);
static RESULT OV13b10_IsiReleaseIss(IsiSensorHandle_t handle);
static RESULT OV13b10_IsiGetCapsIss(IsiSensorHandle_t handle, IsiCaps_t * pCaps);
static RESULT OV13b10_IsiSetStreamingIss(IsiSensorHandle_t handle,bool_t on);
static RESULT OV13b10_IsiGetRevisionIss(IsiSensorHandle_t handle,uint32_t *pValue);
static RESULT OV13b10_IsiGetAeBaseInfoIss(IsiSensorHandle_t handle, IsiAeBaseInfo_t *pAeBaseInfo);
static RESULT OV13b10_IsiGetAGainIss(IsiSensorHandle_t handle, IsiSensorGain_t *pSensorAGain);
static RESULT OV13b10_IsiGetDGainIss(IsiSensorHandle_t handle, IsiSensorGain_t *pSensorDGain);
static RESULT OV13b10_IsiSetAGainIss(IsiSensorHandle_t handle, IsiSensorGain_t *pSensorAGain);
static RESULT OV13b10_IsiSetDGainIss(IsiSensorHandle_t handle, IsiSensorGain_t *pSensorDGain);
static RESULT OV13b10_IsiGetIntTimeIss(IsiSensorHandle_t handle, IsiSensorIntTime_t *pSensorIntTime);
static RESULT OV13b10_IsiSetIntTimeIss(IsiSensorHandle_t handle, const IsiSensorIntTime_t *pSensorIntTime);

static uint16_t OV13b10_mipi4lane_4208_3120_init[][2] =
{
    {0x0103,0x01},
    {0x0303,0x01},
    {0x0305,0x46},
    {0x0321,0x00},
    {0x0323,0x04},
    {0x0324,0x01},
    {0x0325,0x50},
    {0x0326,0x81},
    {0x0327,0x04},
    {0x3011,0x7c},
    {0x3012,0x07},
    {0x3013,0x32},
    {0x3107,0x23},
    {0x3501,0x00},
    {0x3502,0xa0},
    {0x3504,0x08},
    {0x3508,0x07},
    {0x3509,0xc0},
    {0x3600,0x16},
    {0x3601,0x54},
    {0x3612,0x4e},
    {0x3620,0x00},
    {0x3621,0x68},
    {0x3622,0x66},
    {0x3623,0x03},
    {0x3662,0x92},
    {0x3666,0xbb},
    {0x3667,0x44},
    {0x366e,0xff},
    {0x366f,0xf3},
    {0x3675,0x44},
    {0x3676,0x00},
    {0x367f,0xe9},
    {0x3681,0x32},
    {0x3682,0x1f},
    {0x3683,0x0b},
    {0x3684,0x0b},
    {0x3704,0x0f},
    {0x3706,0x40},
    {0x3708,0x3b},
    {0x3709,0x72},
    {0x370b,0xa2},
    {0x3714,0x24},
    {0x371a,0x3e},
    {0x3725,0x42},
    {0x3739,0x12},
    {0x3767,0x00},
    {0x377a,0x0d},
    {0x3789,0x18},
    {0x3790,0x40},
    {0x3791,0xa2},
    {0x37c2,0x04},
    {0x37c3,0xf1},
    {0x37d9,0x0c},
    {0x37da,0x02},
    {0x37dc,0x02},
    {0x37e1,0x04},
    {0x37e2,0x0a},
    {0x3800,0x00},
    {0x3801,0x00},
    {0x3802,0x00},
    {0x3803,0x08},
    {0x3804,0x10},
    {0x3805,0x8f},
    {0x3806,0x0c},
    {0x3807,0x47},
    {0x3808,0x10},
    {0x3809,0x70},
    {0x380a,0x0c},
    {0x380b,0x30},
    {0x380c,0x04},
    {0x380d,0x98},
    {0x380e,0x0c},
    {0x380f,0x7c},
    {0x3811,0x0f},
    {0x3813,0x08},
    {0x3814,0x01},
    {0x3815,0x01},
    {0x3816,0x01},
    {0x3817,0x01},
    {0x381f,0x08},
    {0x3820,0x88},
    {0x3821,0x00},
    {0x3822,0x14},
    {0x3823,0x18},
    {0x3827,0x01},
    {0x382e,0xe6},
    {0x3c80,0x00},
    {0x3c87,0x01},
    {0x3c8c,0x19},
    {0x3c8d,0x1c},
    {0x3ca0,0x00},
    {0x3ca1,0x00},
    {0x3ca2,0x00},
    {0x3ca3,0x00},
    {0x3ca4,0x50},
    {0x3ca5,0x11},
    {0x3ca6,0x01},
    {0x3ca7,0x00},
    {0x3ca8,0x00},
    {0x4008,0x02},
    {0x4009,0x0f},
    {0x400a,0x01},
    {0x400b,0x19},
    {0x4011,0x21},
    {0x4017,0x08},
    {0x4019,0x04},
    {0x401a,0x58},
    {0x4032,0x1e},
    {0x4050,0x02},
    {0x4051,0x09},
    {0x405e,0x00},
    {0x4066,0x02},
    {0x4501,0x00},
    {0x4502,0x10},
    {0x4505,0x00},
    {0x4800,0x14},
    {0x481b,0x3e},
    {0x481f,0x30},
    {0x4825,0x34},
    {0x4837,0x0e},
    {0x484b,0x03},
    {0x4883,0x02},
    {0x5000,0xff},
    {0x5001,0x0f},
    {0x5045,0x20},
    {0x5046,0x20},
    {0x5047,0xa4},
    {0x5048,0x20},
    {0x5049,0xa4},
    {0x0304,0x00},
    {0x0305,0x22},
    {0x0306,0x02},
    {0x0323,0x01},
    {0x0324,0x00},
    {0x0325,0x50},
    {0x0326,0x01},
    {0x4837,0x30},
    {0x380c,0x1d},
    {0x380d,0x68},
    {0x380e,0x30},
    {0x380f,0x74},
    {0x482b,0x32},
    {0x4829,0xff},
};

static uint16_t OV13b10_mipi4lane_4208_2368_init[][2] =
{
    {0x0103,0x01},
    {0x0303,0x01},
    {0x0305,0x46},
    {0x0321,0x00},
    {0x0323,0x04},
    {0x0324,0x01},
    {0x0325,0x50},
    {0x0326,0x81},
    {0x0327,0x04},
    {0x3011,0x7c},
    {0x3012,0x07},
    {0x3013,0x32},
    {0x3107,0x23},
    {0x3501,0x00},
    {0x3502,0xa0},
    {0x3504,0x08},
    {0x3508,0x07},
    {0x3509,0xc0},
    {0x3600,0x16},
    {0x3601,0x54},
    {0x3612,0x4e},
    {0x3620,0x00},
    {0x3621,0x68},
    {0x3622,0x66},
    {0x3623,0x03},
    {0x3662,0x92},
    {0x3666,0xbb},
    {0x3667,0x44},
    {0x366e,0xff},
    {0x366f,0xf3},
    {0x3675,0x44},
    {0x3676,0x00},
    {0x367f,0xe9},
    {0x3681,0x32},
    {0x3682,0x1f},
    {0x3683,0x0b},
    {0x3684,0x0b},
    {0x3704,0x0f},
    {0x3706,0x40},
    {0x3708,0x3b},
    {0x3709,0x72},
    {0x370b,0xa2},
    {0x3714,0x24},
    {0x371a,0x3e},
    {0x3725,0x42},
    {0x3739,0x12},
    {0x3767,0x00},
    {0x377a,0x0d},
    {0x3789,0x18},
    {0x3790,0x40},
    {0x3791,0xa2},
    {0x37c2,0x04},
    {0x37c3,0xf1},
    {0x37d9,0x0c},
    {0x37da,0x02},
    {0x37dc,0x02},
    {0x37e1,0x04},
    {0x37e2,0x0a},
    {0x3800,0x00},
    {0x3801,0x00},
    {0x3802,0x01},
    {0x3803,0x78},
    {0x3804,0x10},
    {0x3805,0x8f},
    {0x3806,0x0a},
    {0x3807,0xd7},
    {0x3808,0x10},
    {0x3809,0x70},
    {0x380a,0x09},
    {0x380b,0x40},
    {0x380c,0x04},
    {0x380d,0x98},
    {0x380e,0x0c},
    {0x380f,0x7c},
    {0x3811,0x0f},
    {0x3813,0x10},
    {0x3814,0x01},
    {0x3815,0x01},
    {0x3816,0x01},
    {0x3817,0x01},
    {0x381f,0x08},
    {0x3820,0x88},
    {0x3821,0x00},
    {0x3822,0x14},
    {0x3823,0x18},
    {0x3827,0x01},
    {0x382e,0xe6},
    {0x3c80,0x00},
    {0x3c87,0x01},
    {0x3c8c,0x19},
    {0x3c8d,0x1c},
    {0x3ca0,0x00},
    {0x3ca1,0x00},
    {0x3ca2,0x00},
    {0x3ca3,0x00},
    {0x3ca4,0x50},
    {0x3ca5,0x11},
    {0x3ca6,0x01},
    {0x3ca7,0x00},
    {0x3ca8,0x00},
    {0x4008,0x02},
    {0x4009,0x0f},
    {0x400a,0x01},
    {0x400b,0x19},
    {0x4011,0x21},
    {0x4017,0x08},
    {0x4019,0x04},
    {0x401a,0x58},
    {0x4032,0x1e},
    {0x4050,0x02},
    {0x4051,0x09},
    {0x405e,0x00},
    {0x4066,0x02},
    {0x4501,0x00},
    {0x4502,0x10},
    {0x4505,0x00},
    {0x4800,0x64},
    {0x481b,0x3e},
    {0x481f,0x30},
    {0x4825,0x34},
    {0x4837,0x0e},
    {0x484b,0x01},
    {0x4883,0x02},
    {0x5000,0xff},
    {0x5001,0x0f},
    {0x5045,0x20},
    {0x5046,0x20},
    {0x5047,0xa4},
    {0x5048,0x20},
    {0x5049,0xa4},
    {0x0305,0x28},
    {0x0306,0x03},
    {0x0323,0x01},
    {0x0324,0x00},
	{0x0325,0x50},
	{0x4837,0x32},
    {0x380c,0x20},
    {0x380d,0xf0},
    {0x380e,0x20},
    {0x380f,0xf8},
};

static uint16_t OV13b10_mipi4lane_720p_3fps_init[][2] =
{
    {0x0103, 0x01},
    {0x0303, 0x01},
    {0x0305, 0x23},
    {0x0321, 0x00},
    {0x0323, 0x04},
    {0x0324, 0x01},
    {0x0325, 0x50},
    {0x0326, 0x81},
    {0x0327, 0x04},
    {0x3011, 0x7c},
    {0x3012, 0x07},
    {0x3013, 0x32},
    {0x3107, 0x23},
    {0x3501, 0x03},
    {0x3502, 0x00},
    {0x3504, 0x08},
    {0x3508, 0x07},
    {0x3509, 0xc0},
    {0x3600, 0x16},
    {0x3601, 0x54},
    {0x3612, 0x4e},
    {0x3620, 0x00},
    {0x3621, 0x68},
    {0x3622, 0x66},
    {0x3623, 0x03},
    {0x3662, 0x88},
    {0x3666, 0xbb},
    {0x3667, 0x44},
    {0x366e, 0xff},
    {0x366f, 0xf3},
    {0x3675, 0x44},
    {0x3676, 0x00},
    {0x367f, 0xe9},
    {0x3681, 0x32},
    {0x3682, 0x1f},
    {0x3683, 0x0b},
    {0x3684, 0x0b},
    {0x3704, 0x0f},
    {0x3706, 0x40},
    {0x3708, 0x3b},
    {0x3709, 0x72},
    {0x370b, 0xa2},
    {0x3714, 0x28},
    {0x371a, 0x3e},
    {0x3725, 0x42},
    {0x3739, 0x10},
    {0x3767, 0x00},
    {0x377a, 0x0d},
    {0x3789, 0x18},
    {0x3790, 0x40},
    {0x3791, 0xa2},
    {0x37c2, 0x14},
    {0x37c3, 0xf1},
    {0x37d9, 0x06},
    {0x37da, 0x02},
    {0x37dc, 0x02},
    {0x37e1, 0x04},
    {0x37e2, 0x0c},
    {0x37e4, 0x00},
    {0x3800, 0x03},
    {0x3801, 0x30},
    {0x3802, 0x03},
    {0x3803, 0x48},
    {0x3804, 0x0d},
    {0x3805, 0x5f},
    {0x3806, 0x09},
    {0x3807, 0x07},
    {0x3808, 0x05},
    {0x3809, 0x00},
    {0x380a, 0x02},
    {0x380b, 0xd0},
    {0x380c, 0x10},
    {0x380d, 0x20},
    {0x380e, 0x03},
    {0x380f, 0x1e},
    {0x3811, 0x0b},
    {0x3813, 0x08},
    {0x3814, 0x03},
    {0x3815, 0x01},
    {0x3816, 0x03},
    {0x3817, 0x01},
    {0x381f, 0x08},
    {0x3820, 0x8b},
    {0x3821, 0x00},
    {0x3822, 0x14},
    {0x3823, 0x18},
    {0x3827, 0x01},
    {0x382e, 0xe6},
    {0x3c80, 0x00},
    {0x3c87, 0x01},
    {0x3c8c, 0x18},
    {0x3c8d, 0x1c},
    {0x3ca0, 0x00},
    {0x3ca1, 0x00},
    {0x3ca2, 0x00},
    {0x3ca3, 0x00},
    {0x3ca4, 0x50},
    {0x3ca5, 0x11},
    {0x3ca6, 0x01},
    {0x3ca7, 0x00},
    {0x3ca8, 0x00},
    {0x4008, 0x00},
    {0x4009, 0x05},
    {0x400a, 0x01},
    {0x400b, 0x19},
    {0x4011, 0x21},
    {0x4017, 0x08},
    {0x4019, 0x04},
    {0x401a, 0x58},
    {0x4032, 0x1e},
    {0x4050, 0x00},
    {0x4051, 0x05},
    {0x405e, 0x00},
    {0x4066, 0x02},
    {0x4501, 0x08},
    {0x4502, 0x10},
    {0x4505, 0x04},
    {0x4800, 0x54},
    {0x481b, 0x3e},
    {0x482b, 0x32},
    {0x4829, 0xff},
    {0x481f, 0x30},
    {0x4825, 0x34},
    {0x4837, 0x1d},
    {0x484b, 0x01},
    {0x4883, 0x02},
    {0x5000, 0xff},
    {0x5001, 0x0f},
    {0x5045, 0x20},
    {0x5046, 0x20},
    {0x5047, 0xa4},
    {0x5048, 0x20},
    {0x5049, 0xa4},
    {0x0304, 0x00},
    {0x0305, 0xa0},
    {0x0306, 0x03},
    {0x0323, 0x01},
    {0x0324, 0x00},
    {0x0325, 0x88},
    {0x0326, 0x01},
    {0x4837, 0x32},
    {0x380c, 0x24},
    {0x380d, 0xF0},
    {0x380e, 0x18},
    {0x380f, 0xf8},
    {0x0305, 0x28},
    {0x3020, 0x9b},
    {0x0325, 0x88},
};

static uint16_t OV13b10_mipi4lane_720p_2s1f_init[][2] =
{
    {0x0103, 0x01},
    {0x0303, 0x01},
    {0x0305, 0x23},
    {0x0321, 0x00},
    {0x0323, 0x04},
    {0x0324, 0x01},
    {0x0325, 0x50},
    {0x0326, 0x81},
    {0x0327, 0x04},
    {0x3011, 0x7c},
    {0x3012, 0x07},
    {0x3013, 0x32},
    {0x3107, 0x23},
    {0x3501, 0x03},
    {0x3502, 0x00},
    {0x3504, 0x08},
    {0x3508, 0x07},
    {0x3509, 0xc0},
    {0x3600, 0x16},
    {0x3601, 0x54},
    {0x3612, 0x4e},
    {0x3620, 0x00},
    {0x3621, 0x68},
    {0x3622, 0x66},
    {0x3623, 0x03},
    {0x3662, 0x88},
    {0x3666, 0xbb},
    {0x3667, 0x44},
    {0x366e, 0xff},
    {0x366f, 0xf3},
    {0x3675, 0x44},
    {0x3676, 0x00},
    {0x367f, 0xe9},
    {0x3681, 0x32},
    {0x3682, 0x1f},
    {0x3683, 0x0b},
    {0x3684, 0x0b},
    {0x3704, 0x0f},
    {0x3706, 0x40},
    {0x3708, 0x3b},
    {0x3709, 0x72},
    {0x370b, 0xa2},
    {0x3714, 0x28},
    {0x371a, 0x3e},
    {0x3725, 0x42},
    {0x3739, 0x10},
    {0x3767, 0x00},
    {0x377a, 0x0d},
    {0x3789, 0x18},
    {0x3790, 0x40},
    {0x3791, 0xa2},
    {0x37c2, 0x14},
    {0x37c3, 0xf1},
    {0x37d9, 0x06},
    {0x37da, 0x02},
    {0x37dc, 0x02},
    {0x37e1, 0x04},
    {0x37e2, 0x0c},
    {0x37e4, 0x00},
    {0x3800, 0x03},
    {0x3801, 0x30},
    {0x3802, 0x03},
    {0x3803, 0x48},
    {0x3804, 0x0d},
    {0x3805, 0x5f},
    {0x3806, 0x09},
    {0x3807, 0x07},
    {0x3808, 0x05},
    {0x3809, 0x00},
    {0x380a, 0x02},
    {0x380b, 0xd0},
    {0x380c, 0x04},
    {0x380d, 0x98},
    {0x380e, 0x03},
    {0x380f, 0x1e},
    {0x3811, 0x0b},
    {0x3813, 0x08},
    {0x3814, 0x03},
    {0x3815, 0x01},
    {0x3816, 0x03},
    {0x3817, 0x01},
    {0x381f, 0x08},
    {0x3820, 0x8b},
    {0x3821, 0x00},
    {0x3822, 0x14},
    {0x3823, 0x18},
    {0x3827, 0x01},
    {0x382e, 0xe6},
    {0x3c80, 0x00},
    {0x3c87, 0x01},
    {0x3c8c, 0x18},
    {0x3c8d, 0x1c},
    {0x3ca0, 0x00},
    {0x3ca1, 0x00},
    {0x3ca2, 0x00},
    {0x3ca3, 0x00},
    {0x3ca4, 0x50},
    {0x3ca5, 0x11},
    {0x3ca6, 0x01},
    {0x3ca7, 0x00},
    {0x3ca8, 0x00},
    {0x4008, 0x00},
    {0x4009, 0x05},
    {0x400a, 0x01},
    {0x400b, 0x19},
    {0x4011, 0x21},
    {0x4017, 0x08},
    {0x4019, 0x04},
    {0x401a, 0x58},
    {0x4032, 0x1e},
    {0x4050, 0x00},
    {0x4051, 0x05},
    {0x405e, 0x00},
    {0x4066, 0x02},
    {0x4501, 0x08},
    {0x4502, 0x10},
    {0x4505, 0x04},
    {0x4800, 0x54},
    {0x481b, 0x3e},
    {0x482b, 0x32},
    {0x4829, 0xff},
    {0x481f, 0x30},
    {0x4825, 0x34},
    {0x4837, 0x1d},
    {0x484b, 0x01},
    {0x4883, 0x02},
    {0x5000, 0xff},
    {0x5001, 0x0f},
    {0x5045, 0x20},
    {0x5046, 0x20},
    {0x5047, 0xa4},
    {0x5048, 0x20},
    {0x5049, 0xa4},
    {0x0304, 0x00},
    {0x0305, 0xa0},
    {0x0306, 0x03},
    {0x0323, 0x01},
    {0x0324, 0x00},
    {0x0325, 0x88},
    {0x0326, 0x01},
    {0x4837, 0x32},
    {0x380c, 0x49},
    {0x380d, 0xe0},
    {0x380e, 0x4f},
    {0x380f, 0xf8},
    {0x0305, 0x28},
    {0x3020, 0x9b},
    {0x0325, 0x88},
};

#ifdef __cplusplus
}
#endif

/* @} ov13b10priv */

#endif    /* __OV13b10PRIV_H__ */

